-- GUI
local ScreenGui = Instance.new("ScreenGui", game.CoreGui)
ScreenGui.Name = "ShiftLockGui"

local ToggleButton = Instance.new("TextButton")
ToggleButton.Parent = ScreenGui
ToggleButton.Size = UDim2.new(0, 120, 0, 40)
ToggleButton.Position = UDim2.new(0, 10, 0.75, 0)
ToggleButton.Text = "Shift Lock OFF"
ToggleButton.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
ToggleButton.TextColor3 = Color3.fromRGB(255, 255, 255)
ToggleButton.TextScaled = true
ToggleButton.BorderSizePixel = 0
ToggleButton.Active = true
ToggleButton.Draggable = false -- a gente vai fazer o sistema de drag na mão

-- Variáveis
local player = game.Players.LocalPlayer
local camera = workspace.CurrentCamera
local runService = game:GetService("RunService")
local uis = game:GetService("UserInputService")
local shiftLocked = false
local connection

-- Função: verificar se está num veículo
local function isInVehicle()
	local char = player.Character
	if not char then return false end

	for _, part in ipairs(char:GetDescendants()) do
		if part:IsA("VehicleSeat") and part.Occupant == char:FindFirstChild("Humanoid") then
			return true
		end
	end
	return false
end

-- Função: trava o personagem olhando para onde a câmera aponta
local function lockCharacterToCamera()
	if not player.Character or not player.Character:FindFirstChild("HumanoidRootPart") then return end
	if isInVehicle() then return end

	local root = player.Character.HumanoidRootPart
	local camLook = camera.CFrame.LookVector
	local flatLook = Vector3.new(camLook.X, 0, camLook.Z).Unit

	root.CFrame = CFrame.new(root.Position, root.Position + flatLook)
end

-- Alternar Shift Lock
local function toggleShiftLock()
	shiftLocked = not shiftLocked
	ToggleButton.Text = shiftLocked and "Shift Lock ON" or "Shift Lock OFF"

	if shiftLocked then
		connection = runService.RenderStepped:Connect(lockCharacterToCamera)
	else
		if connection then connection:Disconnect() end
	end
end

ToggleButton.MouseButton1Click:Connect(toggleShiftLock)

-- Função de arrastar com o dedo
local dragging = false
local dragInput, dragStart, startPos

ToggleButton.InputBegan:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.Touch or input.UserInputType == Enum.UserInputType.MouseButton1 then
		dragging = true
		dragStart = input.Position
		startPos = ToggleButton.Position

		input.Changed:Connect(function()
			if input.UserInputState == Enum.UserInputState.End then
				dragging = false
			end
		end)
	end
end)

ToggleButton.InputChanged:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.Touch or input.UserInputType == Enum.UserInputType.MouseMovement then
		dragInput = input
	end
end)

uis.InputChanged:Connect(function(input)
	if input == dragInput and dragging then
		local delta = input.Position - dragStart
		ToggleButton.Position = UDim2.new(
			startPos.X.Scale,
			startPos.X.Offset + delta.X,
			startPos.Y.Scale,
			startPos.Y.Offset + delta.Y
		)
	end
end)
